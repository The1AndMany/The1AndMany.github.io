Critical - Solve before launch:
	Edit "WT - Oneironaut.txt", then eventually finalize it
		I took notes on what feedback I've gotten and placed them at the top of the .txt file
		With the extent of the changes, a total rewrite may be easier than going through and spot-editing
	More content!
		I'm thinking 2-3 more stories after finalizing the oneironaut one before launching
	Rewrite the splash page for launch
	Get a domain (I'm thinking lowrezlabs.net)

Stuff that can wait until after launch:
	Perpetually add more content
		Don't worry too hard about making sure there's always something new. This is just a pet project, after all
	Remove the splash page, and replace with the filebrowser root
		This would make the website more streamlined, but require me to find different places to put the Rickrollin' login page (if I decide to keep it) and the IE/Edge message
		This would break any existing links unless I duplicate all existing content, keep a copy in the /filebrowser folder, and adapt all .html pages to redirect to the new path
			Of course, if the website doesn't take off until after I do this, I'd be the only one linking to the site, and thus I'd be the only one who'd have to replace them all
				Plus, the www.lowrezlabs.net link would still work, it would just lead straight into the file browser instead of the splash page, so depending how I link I may not even need to do that.
	Figure out how to display content properly if a user is on IE/Edge and Hack can't be used
		Currently, IE/Edge displays the Figure Space characters at 5/6 width when using a monospace font, unless it's Hack
		Reminder: Using multiple regular spaces in a row gets collapsed to display as only one space
			Not just on IE/Edge; also on Chrome, and presumably Firefox
	Figure out a solution for if there's more entries than would fit on one page
	Figure out some way to automatically update for new content without having to manually edit the .html files (Maybe some .css magic?)
		This will be complicated somewhat when I accumulate more entries than would fit on one page (see above)
		(See server-side code note below)
	Figure out some way to allow navigating the website using only text commands
		Think the current visual design, but interacting using command line-esque prompts
		I plan to keep the click-interaction intact
		I need to figure out how to have the typed text display in Hack
		There should be some error handler for if a command is unrecognized
		This would all have to fit into the established aesthetic as well
		(See server-side code note below)

Notes:
(Server-side code)
	Github pages doesn't support server-side code (PHP, Ruby, Python, etc.), which this feature may require. If it does I would have to use a "proper" web host, which would almost certainly cost money. I should weigh whether it would be worth worth actually paying for a web host for what benefits I reap, including commercial purposes and adding this feature.
		I should also be sure that the feature works by testing locally before deciding anything based on it