Goal: Complete ten points from the checklist below each day, only letting up to 5 points roll over to the next day:
+10	Edit and finalize "WT - Oneironaut.txt"
		Either this or the item below, not both
		I took notes on what feedback I've gotten and placed them at the top of the .txt file
+1	Decide to not release "WT - Oneironaut.txt" at launch
		Either this or the item above, not both
+2	Create a WIP folder and move everything that isn't ready for release there
+2	Decide whether A Message of Hope is a serial or not, then move it to the appropriate place
+8	Expand entry 4 of Generations with Giants
+4	Translate "Dropbox/Text files/Transfer/sites.txt" to HTML and add it to the root index
(Rollover from 5-7-17: +4)

Once all of those are done:
* Another peer-review of Generations with Giants
* "	"	"	 "WT - Oneironaut.txt", if I decided to keep it at launch
* Decide whether the Kitsune Logan story is ready to publish just yet
	* Add the appropriate indexing if it is
* Add a new announcement declaring that the site is almost ready

Once that's done:
* One final peer-review of the entire site, lasting up to 1 week

If the peer-review is positive:
* Add another new announcement that the website is now public
* Get a domain (www.lowrezlabs.net)
* Properly set up the A and CNAME redirects
	* Documentation: http://www.curtismlarson.com/blog/2015/04/12/github-pages-google-domains/
* Wait until the redirect records update
	* i.e. wait until you can use www.lowrezlabs.net instead of the1andmany.github.io
* Announce the launch
	* At least on Twitter and FA
		* Don't forget to change the website on my Twitter profile!

Stuff that can wait until after launch:
	Perpetually add more content
		Don't worry too hard about making sure there's always something new. This is just a pet project, after all
		I could assign point values to each bit of work I do and aim to get a certain number of points per day, while rolling over extra points until I reach half of my point goal for the next day
			Essentially the system I used to get the lead out and actually get myself to get the site ready for a public launch
	Figure out how to display content properly if a user is on IE/Edge and Hack can't be used
		Currently, IE/Edge displays the Figure Space characters at 5/6 width when using a monospace font, unless it's Hack
		Reminder: Using multiple regular spaces in a row gets collapsed to display as only one space
			Not just on IE/Edge; also on Chrome, and presumably Firefox
	Figure out a solution for if there's more entries than would fit on one page
		(See Javascript note below)
	Figure out some way to automatically update for new content without having to manually edit the .html files
		This will be complicated somewhat when I accumulate more entries than would fit on one page (see above)
		(See Javascript note below)
		(See server-side code note below)
	Figure out some way to allow navigating the website using only text commands
		Think the current visual design, but interacting using command line-esque prompts
		I plan to keep the click-interaction intact
		There should be some error handler for if a command is unrecognized
		This would all have to fit into the established aesthetic as well
			That means the typed text should appear in-line and in Hack
		(See Javascript note below)
		(See server-side code note below)

Notes:
(Javascript)
	Just as a reminder, IE/Edge doesn't run Javascript automatically, and the dialog to enable it disappears after a few seconds. This could theorhetically be solved by setting it so that there's failsafe content that displays if Javascript can't run and that fits with my aesthetic.
(Server-side code)
	Github pages doesn't support server-side code (PHP, Ruby, Python, etc.), which this feature may require. If it does I would have to use a "proper" web host, which would almost certainly cost money. I should weigh whether it would be worth worth actually paying for a web host for what benefits I reap, including commercial purposes and adding this feature.
		I should also be sure that the feature works by testing locally before deciding anything based on it
		Just to be clear, Javascript counts as client-side code